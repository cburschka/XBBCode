<?php

function xbbcode_highlighter_init() {
  global $xbbcode_highlighter_okay;
  $xbbcode_highlighter_okay = TRUE;
  
  drupal_add_css(drupal_get_path('module', 'xbbcode_highlighter') . '/xbbcode_highlighter.css');
  $text = variable_get('xbbcode_highlighter_pear_highlighter', FALSE);
  if (!file_exists("$text/Text/Highlighter.php")) {
    variable_set('xbbcode_highlighter_pear_highlighter', FALSE);
  }
  else set_include_path(get_include_path() . PATH_SEPARATOR . $text);
  
  $parser = variable_get('xbbcode_highlighter_pear_parser', FALSE);
  if (!file_exists("$parser/XML/Parser.php")) {
    variable_set('xbbcode_highlighter_pear_parser', FALSE);
  }
  else if ($parser != $text) set_include_path(get_include_path() . PATH_SEPARATOR . $parser);
  
  // Load the package silently.
  @include_once 'Text/Highlighter.php';
  @include_once 'XML/Parser.php';
  
  if (!class_exists('Text_Highlighter') || !class_exists('XML_Parser')) {
    drupal_set_message(t('Syntax Highlighter requires several PEAR packages to be installed. Follow <a href="@url">these instructions</a> to install them. The highlighter will not work until you do this.',
     array('@url' => url('admin/settings/xbbcode/highlighter'))), 'warning', FALSE);
    $xbbcode_highlighter_okay = FALSE;
  }
}

function xbbcode_highlighter_filter($op = 'list', $delta = 0, $format = -1, $text = NULL) {
  static $codes, $info, $formats;
  
  if (!isset($codes)) {
    $res = db_query("SELECT delta, id, name FROM {xbbcode_highlighter}");
    while ($row = db_fetch_array($res)) {
      $codes[$row['delta']] = $row['id'];
      $info[$row['delta']]  = $row['name'] ? $row['name'] : strtoupper($row['id']);
    }
    $formats = variable_get('xbbcode_highlighter_formats');
  }
    
  switch($op) {
    // Don't clutter the filter list. No format will need more than *one* highlighting filter.
    case 'list': return array(t('Print text as code with syntax highlighting'));
    case 'no cache': return TRUE;
    case 'process':
      // Do not process anything unless the filter's libraries are here.
      if ($xbbcode_highlighter_okay) {
        drupal_load_file('xbbcode_highlighter.filter.inc');
        return xbbcode_highlighter_highlight($formats[$format], $text);
      }
      
    default: return $text;
  }
}

function xbbcode_highlighter_filter_tips($delta, $format = -1, $long = false) {
  static $info, $formats;
  if (!isset($info)) {
    $res = db_query("SELECT id, name, description, sample FROM {xbbcode_highlighter}");
    while ($row = db_fetch_array($res)) {
      $info[$row['id']] = array(
        'name'        => $row['name'] ? $row['name'] : strtoupper($row['id']),
        'description' => $row['description'],
        'sample'      => $row['sample'],
      );
    }
    $formats = variable_get('xbbcode_highlighter_formats');
  }
  
  $language = $info[$formats[$format]['language']];

  $out = t('Your text will be syntax-colored as %lang code.', array('%lang' => $language['name']));
  if ($long) {
    if ($row['description']) $out .= '<p>'. $row['description'] .'</p>';
    if ($row['sample']) $out .= xbbcode_highlighter_highlight($formats[$format], $row['sample']);
  }
  return $out;
}

function xbbcode_highlighter_menu() {
  $menu['admin/settings/xbbcode/highlighter'] = array(
    'title' => 'Syntax Highlighting',
    'description' => 'Configure the syntax highlighter for XBBCode or add new languages.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('xbbcode_highlighter_settings'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'xbbcode_highlighter.admin.inc',
    'access arguments' => array('administer site configuration'),
  );

  $menu['admin/settings/xbbcode/highlighter/languages'] = array(
    'title' => 'Manage Languages',
    'description' => 'You may enable or disable languages already installed, or change their names and descriptions.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
				      
  $menu['admin/settings/xbbcode/highlighter/import'] = array(
    'title' => 'Import',
    'description' => 'Import new languages by uploading XML files.',
    'callback' => 'drupal_get_form',
    'callback arguments' => 'xbbcode_highlighter_import',
    'file' => 'xbbcode_highlighter.admin.inc',
    'file' => 'xbbcode_highlighter.import.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
 				      
  return $menu;
}

function xbbcode_highlighter_xbbcode($op = 'list', $delta = '', $tag = NULL) {
  static $languages;
  if (!isset($languages)) {
    $res = db_query("SELECT id, name, description, sample FROM {xbbcode_highlighter}");
    while ($row = db_fetch_array($result)) {
      if (!$row['name']) $row['name'] = strtoupper($row['id']);
      $languages[$row['id']] = $row;
    }
  }
  
  switch($op) {
    case 'list': return array_keys($languages);
    case 'info': return xbbcode_highlighter_info($languages[$delta]);
    case 'render': 
      $settings = array('language' => $delta, 'numbers' => $tag->option == 'ln');
      return xbbcode_highlighter_highlight($settings, $tag->content);
  }
}

function xbbcode_highlighter_info($language) {
  return array(
    'name'    => $language['name'],
    'dynamic' => TRUE,
    'description' => t('Provides syntax coloring for the %lang language. The option <em>ln</em> will print out line numbers.', 
                    array('%lang' => $language['name'])) . ' ' . $row['description'],
    'sample'  => '[' . $language['id'] . '=ln]' . ($language['sample'] ? $language['sample'] : 'code;')
                     . '[/' . $language['id'] . ']',
  );
}

?>
